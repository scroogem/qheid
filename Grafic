import csv
import matplotlib.pyplot as plt
from math import sqrt
from collections import Counter

# === Загрузка данных из iris.csv ===
data = []
with open('iris.csv', newline='') as csvfile:
    reader = csv.reader(csvfile, delimiter=';')
    for row in reader:
        try:
            length = float(row[2])  # длина лепестка
            width = float(row[3])   # ширина лепестка
            species = row[4]
            data.append([length, width, species])
        except:
            continue  # пропускаем некорректные строки

# === Разделение данных по видам для отображения ===
colors = {'0': 'green', '1': 'red', '2': 'blue'}  # setosa, versicolor, virginica
labels = {'0': 'setosa', '1': 'versicolor', '2': 'virginica'}
x_vals, y_vals, color_vals = [], [], []

for d in data:
    x_vals.append(d[0])
    y_vals.append(d[1])
    color_vals.append(colors[d[2]])

# === Построение графика ===
plt.figure(figsize=(8, 6))
plt.scatter(x_vals, y_vals, c=color_vals, label='iris')

# Новая точка (mystère)
mystery_point = [2.0, 0.5]
plt.scatter(mystery_point[0], mystery_point[1], c='black', label='Mystère', marker='x', s=100)

plt.xlabel('longueur des pétales (cm)')
plt.ylabel('largeur des pétales (cm)')
plt.title("Représentation graphique des iris + point mystère")
plt.legend()
plt.grid(True)
plt.show()

# === Алгоритм k-NN ===

def distance(p1, p2):
    return sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)

def knn(data, mystery_point, k=3):
    distances = []
    for d in data:
        dist = distance([d[0], d[1]], mystery_point)
        distances.append((dist, d[2]))
    distances.sort()
    neighbors = distances[:k]
    classes = [n[1] for n in neighbors]
    prediction = Counter(classes).most_common(1)[0][0]
    return prediction, neighbors

k = 3
prediction, neighbors = knn(data, mystery_point, k)

print(f"Предсказанный вид ириса для точки {mystery_point} (k={k}): {labels[prediction]}")
