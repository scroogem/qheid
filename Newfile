import time

def binary_search(arr, target):
    a, b = 0, len(arr) - 1
    while a <= b:
        c = (a + b) // 2
        if arr[c] == target:
            return c  # Возвращаем индекс найденного элемента
        elif arr[c] < target:
            a = c + 1
        else:
            b = c - 1
    return -1  # Если элемент не найден

def linear_search(arr, target):
    for i, val in enumerate(arr):
        if val == target:
            return i
    return -1

# Тестовые данные
L = [1, 3, 4, 6, 7, 9, 12, 15]
V = 7

# Измерение времени бинарного поиска
start_time = time.time()
binary_index = binary_search(L, V)
binary_time = time.time() - start_time




ROWS = 6
COLUMNS = 7

def create_grid():
    return [[" " for _ in range(COLUMNS)] for _ in range(ROWS)]

def print_grid(grid):
    print(" " + " ".join(str(i) for i in range(COLUMNS)))
    for row in grid:
        print("|" + "|".join(row) + "|")
    print("-" * (COLUMNS * 2 + 1))

def drop_piece(grid, column, piece):
    for row in reversed(grid):
        if row[column] == " ":
            row[column] = piece
            return True
    return False

def main():
    grid = create_grid()
    player_turn = 1
    print_grid(grid)

    while True:
        print(f"Joueur {player_turn}")
        try:
            column = int(input("Choisissez une colonne (0-6): "))
            if column < 0 or column >= COLUMNS:
                print("Colonne invalide.")
                continue
        except ValueError:
            print("Veuillez entrer un nombre.")
            continue

        piece = "X" if player_turn == 1 else "O"
        if drop_piece(grid, column, piece):
            print_grid(grid)
            player_turn = 2 if player_turn == 1 else 1
        else:
            print("Colonne pleine. Choisissez une autre.")

if __name__ == "__main__":
    main()








# Измерение времени линейного поиска
start_time = time.time()
linear_index = linear_search(L, V)
linear_time = time.time() - start_time

# Вывод результатов
print(f"Бинарный поиск: индекс = {binary_index}, время = {binary_time:.10f} сек")
print(f"Линейный поиск: индекс = {linear_index}, время = {linear_time:.10f} сек")
